package testng5ScreenShotForPassedAndFailedTestCaseFolder;

import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;
import org.testng.Reporter;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.text.SimpleDateFormat;
import java.util.Date;

public class LinstnersProg implements ITestListener {

    private static final String SCREENSHOT_FOLDER = "screenshots";
    private static final String FAILED_FOLDER = "failedScreenshots";
    private static final String PASSED_FOLDER = "passedScreenshots";

    @Override
    public void onStart(ITestContext iTestContext) {
        // Create the main screenshots folder
        createFolder(SCREENSHOT_FOLDER);
        // Create subfolders for failed and passed screenshots
        createFolder(FAILED_FOLDER);
        createFolder(PASSED_FOLDER);
    }

    @Override
    public void onTestFailure(ITestResult result) {
        captureAndSaveScreenshot(result, FAILED_FOLDER);
    }

    @Override
    public void onTestSuccess(ITestResult result) {
        captureAndSaveScreenshot(result, PASSED_FOLDER);
    }

    // Helper method to capture and save the screenshot
    private void captureAndSaveScreenshot(ITestResult result, String folderName) {
        WebDriver driver = (WebDriver) result.getTestContext().getAttribute("WebDriver");
        if (driver instanceof TakesScreenshot) {
            File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
            String timestamp = new SimpleDateFormat("yyyyMMdd-HHmmss").format(new Date());
            String screenshotName = result.getName() + "-" + timestamp + ".png";
            String destinationPath = SCREENSHOT_FOLDER + File.separator + folderName + File.separator + screenshotName;

            try {
                Files.copy(screenshot.toPath(), new File(destinationPath).toPath(), StandardCopyOption.REPLACE_EXISTING);
                Reporter.log("<br> <img src='" + destinationPath + "' height='100' width='100'/>");
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    // Helper method to create a folder
    private void createFolder(String folderName) {
        Path folderPath = Path.of(SCREENSHOT_FOLDER, folderName);
        try {
            Files.createDirectories(folderPath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Other ITestListener methods (not implemented in this example)

    @Override
    public void onTestStart(ITestResult result) {}

    @Override
    public void onTestSkipped(ITestResult result) {}

    @Override
    public void onTestFailedButWithinSuccessPercentage(ITestResult result) {}

    @Override
    public void onFinish(ITestContext context) {}

    @Override
    public void onTestFailedWithTimeout(ITestResult result) {}

}
